(function(S,m){typeof exports=="object"&&typeof module<"u"?m(exports,require("cesium")):typeof define=="function"&&define.amd?define(["exports","cesium"],m):(S=typeof globalThis<"u"?globalThis:S||self,m(S.CesiumMartini={},S.Cesium))})(this,function(S,m){"use strict";var ui=Object.defineProperty;var di=(S,m,w)=>m in S?ui(S,m,{enumerable:!0,configurable:!0,writable:!0,value:w}):S[m]=w;var a=(S,m,w)=>(di(S,typeof m!="symbol"?m+"":m,w),w);class w{constructor(i){a(this,"resource");a(this,"tileSize",256);a(this,"maxZoom");a(this,"skipOddLevels",!1);a(this,"contextQueue");a(this,"retryCallback");a(this,"retryAttempts");a(this,"getTilePixels",async i=>{const I=await this.loadImage(i);return this.getPixels(I)});this.resource=m.Resource.createIfNeeded(i.url),this.skipOddLevels=i.skipOddLevels??!1,this.tileSize=i.tileSize??256,this.maxZoom=i.maxZoom??15,this.contextQueue=[],this.retryAttempts=i==null?void 0:i.retryAttempts,this.retryCallback=i==null?void 0:i.retryCallback}getCanvas(){let i=this.contextQueue.pop();if(i==null){const I=document.createElement("canvas");I.width=this.tileSize,I.height=this.tileSize;const t=I.getContext("2d");t&&(i={canvas:I,context:t})}return i}getPixels(i){const I=this.getCanvas();if(!I||!i)return;const{context:t}=I;t.drawImage(i,0,0,this.tileSize,this.tileSize);const g=t.getImageData(0,0,this.tileSize,this.tileSize);return t.clearRect(0,0,this.tileSize,this.tileSize),this.contextQueue.push(I),g}loadImage(i){var g;const{z:I,y:t}=i;return(g=this.resource)==null?void 0:g.getDerivedResource({templateValues:{...i,reverseY:Math.pow(2,I)-t-1},preserveQueryParameters:!0,retryAttempts:this.retryAttempts,retryCallback:this.retryCallback}).fetchImage()}getTileDataAvailable({z:i}){return i==this.maxZoom?!0:!(i%2==1&&this.skipOddLevels||i>this.maxZoom)}}const J="",v=typeof window<"u"&&window.Blob&&new Blob([atob(J)],{type:"text/javascript;charset=utf-8"});function z(){let e;try{if(e=v&&(window.URL||window.webkitURL).createObjectURL(v),!e)throw"";return new Worker(e)}catch{return new Worker("data:application/javascript;base64,"+J,{type:"module"})}finally{e&&(window.URL||window.webkitURL).revokeObjectURL(e)}}const H={},L={};let P=0;async function F(e,i,I){const t=P++,g={id:t,payload:i};return new Promise(function(r,c){H[t]=r,L[t]=c,e.postMessage(g,I)})}function T(e){const{id:i,err:I,payload:t}=e.data;if(t){const g=H[i];g&&g(t)}else{const g=L[i];g&&g(I||"Got nothing")}delete H[i],delete L[i]}class M{constructor(i=new z){a(this,"worker");this.worker=i,this.worker.onmessage=T}async scheduleTask(i,I){return await F(this.worker,i,I)}}function N(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function Q(e){for(var i=new Array(e),I=0;I<e;++I)i[I]=I;return i}var j=Q;/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */var x=function(e){return e!=null&&(D(e)||E(e)||!!e._isBuffer)};function D(e){return!!e.constructor&&typeof e.constructor.isBuffer=="function"&&e.constructor.isBuffer(e)}function E(e){return typeof e.readFloatLE=="function"&&typeof e.slice=="function"&&D(e.slice(0,0))}var O=j,U=x,q=typeof Float64Array<"u";function _(e,i){return e[0]-i[0]}function $(){var e=this.stride,i=new Array(e.length),I;for(I=0;I<i.length;++I)i[I]=[Math.abs(e[I]),I];i.sort(_);var t=new Array(i.length);for(I=0;I<t.length;++I)t[I]=i[I][1];return t}function ii(e,i){var I=["View",i,"d",e].join("");i<0&&(I="View_Nil"+e);var t=e==="generic";if(i===-1){var g="function "+I+"(a){this.data=a;};var proto="+I+".prototype;proto.dtype='"+e+"';proto.index=function(){return -1};proto.size=0;proto.dimension=-1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function(){return new "+I+"(this.data);};proto.get=proto.set=function(){};proto.pick=function(){return null};return function construct_"+I+"(a){return new "+I+"(a);}",h=new Function(g);return h()}else if(i===0){var g="function "+I+"(a,d) {this.data = a;this.offset = d};var proto="+I+".prototype;proto.dtype='"+e+"';proto.index=function(){return this.offset};proto.dimension=0;proto.size=1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function "+I+"_copy() {return new "+I+"(this.data,this.offset)};proto.pick=function "+I+"_pick(){return TrivialArray(this.data);};proto.valueOf=proto.get=function "+I+"_get(){return "+(t?"this.data.get(this.offset)":"this.data[this.offset]")+"};proto.set=function "+I+"_set(v){return "+(t?"this.data.set(this.offset,v)":"this.data[this.offset]=v")+"};return function construct_"+I+"(a,b,c,d){return new "+I+"(a,d)}",h=new Function("TrivialArray",g);return h(f[e][0])}var g=["'use strict'"],r=O(i),c=r.map(function(o){return"i"+o}),C="this.offset+"+r.map(function(o){return"this.stride["+o+"]*i"+o}).join("+"),n=r.map(function(o){return"b"+o}).join(","),A=r.map(function(o){return"c"+o}).join(",");g.push("function "+I+"(a,"+n+","+A+",d){this.data=a","this.shape=["+n+"]","this.stride=["+A+"]","this.offset=d|0}","var proto="+I+".prototype","proto.dtype='"+e+"'","proto.dimension="+i),g.push("Object.defineProperty(proto,'size',{get:function "+I+"_size(){return "+r.map(function(o){return"this.shape["+o+"]"}).join("*"),"}})"),i===1?g.push("proto.order=[0]"):(g.push("Object.defineProperty(proto,'order',{get:"),i<4?(g.push("function "+I+"_order(){"),i===2?g.push("return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})"):i===3&&g.push("var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);if(s0>s1){if(s1>s2){return [2,1,0];}else if(s0>s2){return [1,2,0];}else{return [1,0,2];}}else if(s0>s2){return [2,0,1];}else if(s2>s1){return [0,1,2];}else{return [0,2,1];}}})")):g.push("ORDER})")),g.push("proto.set=function "+I+"_set("+c.join(",")+",v){"),t?g.push("return this.data.set("+C+",v)}"):g.push("return this.data["+C+"]=v}"),g.push("proto.get=function "+I+"_get("+c.join(",")+"){"),t?g.push("return this.data.get("+C+")}"):g.push("return this.data["+C+"]}"),g.push("proto.index=function "+I+"_index(",c.join(),"){return "+C+"}"),g.push("proto.hi=function "+I+"_hi("+c.join(",")+"){return new "+I+"(this.data,"+r.map(function(o){return["(typeof i",o,"!=='number'||i",o,"<0)?this.shape[",o,"]:i",o,"|0"].join("")}).join(",")+","+r.map(function(o){return"this.stride["+o+"]"}).join(",")+",this.offset)}");var l=r.map(function(o){return"a"+o+"=this.shape["+o+"]"}),u=r.map(function(o){return"c"+o+"=this.stride["+o+"]"});g.push("proto.lo=function "+I+"_lo("+c.join(",")+"){var b=this.offset,d=0,"+l.join(",")+","+u.join(","));for(var s=0;s<i;++s)g.push("if(typeof i"+s+"==='number'&&i"+s+">=0){d=i"+s+"|0;b+=c"+s+"*d;a"+s+"-=d}");g.push("return new "+I+"(this.data,"+r.map(function(o){return"a"+o}).join(",")+","+r.map(function(o){return"c"+o}).join(",")+",b)}"),g.push("proto.step=function "+I+"_step("+c.join(",")+"){var "+r.map(function(o){return"a"+o+"=this.shape["+o+"]"}).join(",")+","+r.map(function(o){return"b"+o+"=this.stride["+o+"]"}).join(",")+",c=this.offset,d=0,ceil=Math.ceil");for(var s=0;s<i;++s)g.push("if(typeof i"+s+"==='number'){d=i"+s+"|0;if(d<0){c+=b"+s+"*(a"+s+"-1);a"+s+"=ceil(-a"+s+"/d)}else{a"+s+"=ceil(a"+s+"/d)}b"+s+"*=d}");g.push("return new "+I+"(this.data,"+r.map(function(o){return"a"+o}).join(",")+","+r.map(function(o){return"b"+o}).join(",")+",c)}");for(var d=new Array(i),G=new Array(i),s=0;s<i;++s)d[s]="a[i"+s+"]",G[s]="b[i"+s+"]";g.push("proto.transpose=function "+I+"_transpose("+c+"){"+c.map(function(o,y){return o+"=("+o+"===undefined?"+y+":"+o+"|0)"}).join(";"),"var a=this.shape,b=this.stride;return new "+I+"(this.data,"+d.join(",")+","+G.join(",")+",this.offset)}"),g.push("proto.pick=function "+I+"_pick("+c+"){var a=[],b=[],c=this.offset");for(var s=0;s<i;++s)g.push("if(typeof i"+s+"==='number'&&i"+s+">=0){c=(c+this.stride["+s+"]*i"+s+")|0}else{a.push(this.shape["+s+"]);b.push(this.stride["+s+"])}");g.push("var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}"),g.push("return function construct_"+I+"(data,shape,stride,offset){return new "+I+"(data,"+r.map(function(o){return"shape["+o+"]"}).join(",")+","+r.map(function(o){return"stride["+o+"]"}).join(",")+",offset)}");var h=new Function("CTOR_LIST","ORDER",g.join(`
`));return h(f[e],$)}function Ii(e){if(U(e))return"buffer";if(q)switch(Object.prototype.toString.call(e)){case"[object Float64Array]":return"float64";case"[object Float32Array]":return"float32";case"[object Int8Array]":return"int8";case"[object Int16Array]":return"int16";case"[object Int32Array]":return"int32";case"[object Uint8Array]":return"uint8";case"[object Uint16Array]":return"uint16";case"[object Uint32Array]":return"uint32";case"[object Uint8ClampedArray]":return"uint8_clamped";case"[object BigInt64Array]":return"bigint64";case"[object BigUint64Array]":return"biguint64"}return Array.isArray(e)?"array":"generic"}var f={float32:[],float64:[],int8:[],int16:[],int32:[],uint8:[],uint16:[],uint32:[],array:[],uint8_clamped:[],bigint64:[],biguint64:[],buffer:[],generic:[]};function gi(e,i,I,t){if(e===void 0){var A=f.array[0];return A([])}else typeof e=="number"&&(e=[e]);i===void 0&&(i=[e.length]);var g=i.length;if(I===void 0){I=new Array(g);for(var r=g-1,c=1;r>=0;--r)I[r]=c,c*=i[r]}if(t===void 0){t=0;for(var r=0;r<g;++r)I[r]<0&&(t-=(i[r]-1)*I[r])}for(var C=Ii(e),n=f[C];n.length<=g+1;)n.push(ii(C,n.length-1));var A=n[g+1];return A(e,i,I,t)}var ti=gi;const ei=N(ti);class ri{constructor(i=257){a(this,"gridSize");a(this,"numTriangles");a(this,"numParentTriangles");a(this,"indices");a(this,"coords");this.gridSize=i;const I=i-1;if(I&I-1)throw new Error(`Expected grid size to be 2^n+1, got ${i}.`);this.numTriangles=I*I*2-2,this.numParentTriangles=this.numTriangles-I*I,this.indices=new Uint32Array(this.gridSize*this.gridSize),this.coords=new Uint16Array(this.numTriangles*4);for(let t=0;t<this.numTriangles;t++){let g=t+2,r=0,c=0,C=0,n=0,A=0,l=0;for(g&1?C=n=A=I:r=c=l=I;(g>>=1)>1;){const s=r+C>>1,d=c+n>>1;g&1?(C=r,n=c,r=A,c=l):(r=C,c=n,C=A,n=l),A=s,l=d}const u=t*4;this.coords[u+0]=r,this.coords[u+1]=c,this.coords[u+2]=C,this.coords[u+3]=n}}createTile(i){return new si(i,this)}}class si{constructor(i,I){a(this,"terrain");a(this,"martini");a(this,"errors");const t=I.gridSize;if(i.length!==t*t)throw new Error(`Expected terrain data of length ${t*t} (${t} x ${t}), got ${i.length}.`);this.terrain=i,this.martini=I,this.errors=new Float32Array(i.length),this.update()}update(){const{numTriangles:i,numParentTriangles:I,coords:t,gridSize:g}=this.martini,{terrain:r,errors:c}=this;for(let C=i-1;C>=0;C--){const n=C*4,A=t[n+0],l=t[n+1],u=t[n+2],s=t[n+3],d=A+u>>1,G=l+s>>1,h=d+G-l,o=G+A-d,y=(r[l*g+A]+r[s*g+u])/2,B=G*g+d,p=Math.abs(y-r[B]);if(c[B]=Math.max(c[B],p),C<I){const b=(l+o>>1)*g+(A+h>>1),K=(s+o>>1)*g+(u+h>>1);c[B]=Math.max(c[B],c[b],c[K])}}}getMesh(i=0,I){const{gridSize:t,indices:g}=this.martini,{errors:r}=this;let c=0,C=0;const n=t-1,A=I||t;g.fill(0);function l(h,o,y,B,p,b){const K=h+y>>1,Z=o+B>>1,X=Math.abs(h-p)+Math.abs(o-b);X>1&&r[Z*t+K]>i||X>A?(l(p,b,h,o,K,Z),l(y,B,p,b,K,Z)):(g[o*t+h]=g[o*t+h]||++c,g[B*t+y]=g[B*t+y]||++c,g[b*t+p]=g[b*t+p]||++c,C++)}l(0,0,n,n,n,0),l(n,n,0,0,0,n);const u=new Uint16Array(c*2),s=new Uint32Array(C*3);let d=0;function G(h,o,y,B,p,b){const K=h+y>>1,Z=o+B>>1,X=Math.abs(h-p)+Math.abs(o-b);if(X>1&&r[Z*t+K]>i||X>A)G(p,b,h,o,K,Z),G(y,B,p,b,K,Z);else{const Y=g[o*t+h]-1,W=g[B*t+y]-1,k=g[b*t+p]-1;u[2*Y]=h,u[2*Y+1]=o,u[2*W]=y,u[2*W+1]=B,u[2*k]=p,u[2*k+1]=b,s[d++]=Y,s[d++]=W,s[d++]=k}}return G(0,0,n,n,n,0),G(n,n,0,0,0,n),{vertices:u,triangles:s}}}function oi(e,i,I,t){const g=e.shape[0]+1,r=new Float32Array(g*g),c=e.shape[0];i=i??.1,I=I??-1e4;for(let C=0;C<c;C++)for(let n=0;n<c;n++){const A=C,l=e.get(n,A,0),u=e.get(n,A,1),s=e.get(n,A,2),d=l*256*256*i+u*256*i+s*i+I;l===0&&u===0&&s===0&&typeof t=="number"?r[C*g+n]=t:r[C*g+n]=d}for(let C=0;C<g-1;C++)r[g*(g-1)+C]=r[g*(g-2)+C];for(let C=0;C<g;C++)r[g*C+g-1]=r[g*C+g-2];return r}function Ci(e){e=Math.max(e,2);const i=Math.pow(e-1,2)*2,I=Math.pow(e,2),t=new Uint16Array(I*3),g=new Uint16Array(i*3),r=[],c=[],C=[],n=[];let A=0;for(let l=0;l<I;l++){let u=l%e,s=Math.floor(l/e);const d=e*u+s;t[d]=u*32768/(e-1),t[I+d]=s*32768/(e-1),t[2*I+d]=0,s==0&&r.push(d),u==0&&c.push(d),u==e-1&&C.push(d),s==e-1&&n.push(d);const G=l-s*e;G!=e-1&&(g[A*3]=l,g[A*3+1]=l+e+1,g[A*3+2]=l+1,A++),G!=0&&(g[A*3]=l-1,g[A*3+1]=l+e-1,g[A*3+2]=l+e,A++)}return{minimumHeight:0,maximumHeight:0,quantizedVertices:t,indices:g,westIndices:r,southIndices:c,eastIndices:C,northIndices:n}}let V=[];function ni(e){if(e in V)return V[e];{const i=Ci(e);return V[e]=i,i}}function ci(e,i,I){const t=[],g=[],r=[],c=[],C=[],n=[],A=[];let l=1/0,u=-1/0;const s=32768/I;for(let y=0;y<i.vertices.length/2;y++){const B=y,p=i.vertices[y*2],b=i.vertices[y*2+1],K=e.terrain[b*(I+1)+p];K>u&&(u=K),K<l&&(l=K),r.push(K),b==0&&c.push(B),b==I&&C.push(B),p==0&&A.push(B),p==I&&n.push(B);let Z=p*s,X=(I-b)*s;t.push(Z),g.push(X)}const d=u-l,G=r.map(y=>d<1?0:(y-l)*(32767/d)),h=new Uint16Array(i.triangles),o=new Uint16Array([...t,...g,...G]);return{minimumHeight:l,maximumHeight:u,quantizedVertices:o,indices:h,westIndices:A,southIndices:C,eastIndices:n,northIndices:c}}let R;function ai(e){const{imageData:i,tileSize:I=256,errorLevel:t,interval:g,offset:r,noDataHeight:c}=e,C=ei(new Uint8Array(i),[I,I,4],[4,4*I,1],0);R??(R=new ri(I+1));const n=oi(C,g,r,c),A=R.createTile(n),l=A.getMesh(t,e.maxLength);return ci(A,l,I)}class Ai extends m.WebMercatorTilingScheme{tileXYToRectangle(i,I,t,g){let r=super.tileXYToRectangle(i,I,t);return I==0&&(r.north=Math.PI/2),I+1==Math.pow(2,t)&&(r.south=-Math.PI/2),r}}class li{constructor(i){a(this,"hasWaterMask",!1);a(this,"hasVertexNormals",!1);a(this,"credit",new m.Credit("Mapbox"));a(this,"ready");a(this,"readyPromise");a(this,"errorEvent",new m.Event);a(this,"tilingScheme");a(this,"ellipsoid");a(this,"workerFarm",null);a(this,"inProgressWorkers",0);a(this,"levelOfDetailScalar");a(this,"maxWorkers",5);a(this,"minError",.1);a(this,"minZoomLevel");a(this,"fillPoles",!0);a(this,"_errorAtMinZoom",1e3);a(this,"resource");a(this,"interval");a(this,"offset");a(this,"RADIUS_SCALAR",1);a(this,"requestVertexNormals");a(this,"requestWaterMask");a(this,"availability",!1);a(this,"retryCallback");a(this,"retryAttempts");a(this,"noDataHeight");a(this,"zeroMeshError");a(this,"tileImageWidth");this.retryAttempts=i==null?void 0:i.retryAttempts,this.retryCallback=i==null?void 0:i.retryCallback,this.noDataHeight=i==null?void 0:i.noDataHeight,this.zeroMeshError=i==null?void 0:i.zeroMeshError,this.tileImageWidth=i==null?void 0:i.tileImageWidth,this.resource=new w({url:i.url,retryAttempts:this.retryAttempts,retryCallback:this.retryCallback}),this.interval=i.interval??.1,this.offset=i.offset??-1e4,this.maxWorkers=i.maxWorkers??5,this.minZoomLevel=i.minZoomLevel??3,this.fillPoles=i.fillPoles??!0,this.levelOfDetailScalar=(i.detailScalar??4)+m.Math.EPSILON5,this.ready=!0,this.availability=!0,this.readyPromise=Promise.resolve(!0),this.minError=i.minimumErrorLevel??.1,this.requestVertexNormals=i.requestVertexNormals,this.requestWaterMask=i.requestWaterMask,this.errorEvent.addEventListener(console.log,this),this.ellipsoid=i.ellipsoid??m.Ellipsoid.WGS84,this.maxWorkers>0&&(this.workerFarm=new M);let I=m.WebMercatorTilingScheme;this.fillPoles&&(I=Ai),this.tilingScheme=new I({numberOfLevelZeroTilesX:1,numberOfLevelZeroTilesY:1,ellipsoid:this.ellipsoid}),this._errorAtMinZoom=this.errorAtZoom(this.minZoomLevel)}requestTileGeometry(i,I,t,g){if(t<this.minZoomLevel||this.scaledErrorForTile(i,I,t)>this._errorAtMinZoom)return Promise.resolve(this.emptyMesh(i,I,t));if(!(this.inProgressWorkers>this.maxWorkers))return this.inProgressWorkers+=1,this.processTile(i,I,t).finally(()=>{this.inProgressWorkers-=1})}async processTile(i,I,t){try{const{tileSize:g,getTilePixels:r}=this.resource;let c=await r({x:i,y:I,z:t});if(!c)throw Error(`no pixels at x: ${i}, y: ${I}, z: ${t}`);let C=c.data;const n=this.tilingScheme.tileXYToRectangle(i,I,t),A=this.zeroMeshError?0:this.errorAtZoom(t);let l=this.maxVertexDistance(n);const u={imageData:C,maxLength:l,x:i,y:I,z:t,errorLevel:A,ellipsoidRadius:this.ellipsoid.maximumRadius,tileSize:g,interval:this.interval,offset:this.offset,noDataHeight:this.noDataHeight};let s;return this.workerFarm!=null?s=await this.workerFarm.scheduleTask(u,[C.buffer]):s=ai(u),C=void 0,c=void 0,this.createQuantizedMeshData(n,A,s)}catch{return this.emptyMesh(i,I,t)}}errorAtZoom(i){return Math.max(this.getLevelMaximumGeometricError(i)/this.levelOfDetailScalar,this.minError)}scaledErrorForTile(i,I,t){const g=this.tilingScheme.tileXYToRectangle(i,I,t),r=m.Rectangle.center(g);return this.errorAtZoom(t)/Math.pow(1-Math.sin(r.latitude),2)}maxVertexDistance(i){return Math.ceil(2/i.height)}emptyMesh(i,I,t){const g=this.tilingScheme.tileXYToRectangle(i,I,t),r=m.Rectangle.center(g),c=Math.min(Math.abs(Math.sin(r.latitude)),.995);let C=Math.max(Math.ceil(200/(t+1)*Math.pow(1-c,.25)),4);const n=ni(C),A=this.errorAtZoom(t);return this.createQuantizedMeshData(g,A,n)}createQuantizedMeshData(i,I,t){const{minimumHeight:g,maximumHeight:r,quantizedVertices:c,indices:C,westIndices:n,southIndices:A,eastIndices:l,northIndices:u}=t,d=I*20,G=m.Rectangle.center(i),h=i.width/2;let y=Math.cos(h)*this.ellipsoid.maximumRadius+r;h>Math.PI/4&&(y=(1+h)*this.ellipsoid.maximumRadius);const B=new m.Cartographic(G.longitude,G.latitude,y),p=this.ellipsoid.transformPositionToScaledSpace(m.Cartographic.toCartesian(B));let b=m.OrientedBoundingBox.fromRectangle(i,g,r,this.tilingScheme.ellipsoid),K=m.BoundingSphere.fromOrientedBoundingBox(b);return new m.QuantizedMeshTerrainData({minimumHeight:g,maximumHeight:r,quantizedVertices:c,indices:C,boundingSphere:K,orientedBoundingBox:b,horizonOcclusionPoint:p,westIndices:n,southIndices:A,eastIndices:l,northIndices:u,westSkirtHeight:d,southSkirtHeight:d,eastSkirtHeight:d,northSkirtHeight:d,childTileMask:15})}getLevelMaximumGeometricError(i){const I=m.TerrainProvider.getEstimatedLevelZeroGeometricErrorForAHeightmap(this.tilingScheme.ellipsoid,this.tileImageWidth??65,this.tilingScheme.getNumberOfXTilesAtLevel(0)),t=this.resource.tileSize/256;return I/t/(1<<i)}getTileDataAvailable(i,I,t){return this.resource.getTileDataAvailable({x:i,y:I,z:t})}}S.DefaultHeightmapResource=w,S.MartiniTerrainProvider=li,S.WorkerFarm=M,Object.defineProperty(S,Symbol.toStringTag,{value:"Module"})});
